#!/bin/bash -el

# Copyright 2015 tsuru authors. All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

SOURCE_DIR=/var/lib/tsuru
source ${SOURCE_DIR}/base/deploy
source ${SOURCE_DIR}/base/rc/config

version=$(find /go/bin -name "go${GO_VERSION}*" | sort -V | tail -n 1)
if [[ -n "$version" ]]; then
	sudo update-alternatives --set go $version
else
	if [[ "$GO_DOWNLOAD_ALLOWED" == "false" ]]; then
		echo "Requested Go version is ${GO_VERSION} but download is not allowed."
		version=$(find /go/bin -name "go*" | sort -V | tail -n 1)
		sudo update-alternatives --set go $version
	else
		echo "Installing Go ${GO_VERSION}..."
		export GOPATH=/go
		go get "golang.org/dl/go${GO_VERSION}"
		$GOPATH/bin/go${GO_VERSION} download
		sudo update-alternatives --install /usr/bin/go go $GOPATH/bin/go${GO_VERSION} 1
		sudo update-alternatives --set go $GOPATH/bin/go${GO_VERSION}
		export GOPATH=${APP_DIR}
	fi
fi

echo "Using Go version: $(go version)"

if [ -z $(find ${APP_DIR}/current -name "*.go" -print -quit) ]; then
	exit 0
fi

APP_PATH=${APP_DIR}/src/current

if [ -n  "${GO_PKG_PATH}" ]
then
	APP_PATH=${APP_DIR}/src/${GO_PKG_PATH}
fi

mkdir -p ${APP_PATH}
rm -rf ${APP_PATH}
ln -s ${APP_DIR}/current ${APP_PATH}
chown ${USER}:${USER} ${APP_PATH}

pushd ${APP_PATH} >/dev/null 2>&1

# do not fail if the application is not go gettable
set +e
go get -d .
set -e

if [ -f ${APP_DIR}/current/go.mod ] && [ -d ${APP_DIR}/current/vendor ]; then
	GO_BUILD_VENDOR="-mod=vendor"
fi

if [ -f ${APP_DIR}/.default_procfile ]
then
	echo "Procfile not found. Using default Procfile"

	echo "go build -o tsuru-app"
	go build $GO_BUILD_VENDOR -i -o tsuru-app
else
	go build $GO_BUILD_VENDOR -i 2>/dev/null || true
	go install $GO_BUILD_VENDOR ./...
fi

popd >/dev/null 2>&1
